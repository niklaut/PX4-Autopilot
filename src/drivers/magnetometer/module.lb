#!/usr/bin/env python3
############################################################################
#
#   Copyright (c) 2023 PX4 Development Team. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name PX4 nor the names of its contributors may be
#    used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
############################################################################

with open(localpath("../common.py")) as common:
    exec(common.read())


def init(module):
    module.name = ":driver:magnetometer"
    module.description = "Magnetometer Drivers"


def prepare(module, options):
    module.add_modules(
        DefineModule("ak09916", define="DRIVERS_MAGNETOMETER_AKM_AK09916"),
        DefineModule("ak8963", define="DRIVERS_MAGNETOMETER_AKM_AK8963"),
        DefineModule("bmm150", define="DRIVERS_MAGNETOMETER_BOSCH_BMM150"),
        DefineModule("hmc5883", define="DRIVERS_MAGNETOMETER_HMC5883"),
        DefineModule("ist8308", define="DRIVERS_MAGNETOMETER_ISENTEK_IST8308"),
        DefineModule("ist8310", define="DRIVERS_MAGNETOMETER_ISENTEK_IST8310"),
        DefineModule("lis2mdl", define="DRIVERS_MAGNETOMETER_LIS2MDL"),
        DefineModule("lis3mdl", define="DRIVERS_MAGNETOMETER_LIS3MDL"),
        DefineModule("lsm303agr", define="DRIVERS_MAGNETOMETER_LSM303AGR"),
        DefineModule("lsm9ds1_mag", define="DRIVERS_MAGNETOMETER_LSM9DS1_MAG"),
        DefineModule("qmc5883l", define="DRIVERS_MAGNETOMETER_QMC5883L"),
        DefineModule("rm3100", define="DRIVERS_MAGNETOMETER_RM3100"),
        DefineModule("vcm1193l", define="DRIVERS_MAGNETOMETER_VTRANTECH_VCM1193L"),
    )
    return True


def build(env):
    pass

